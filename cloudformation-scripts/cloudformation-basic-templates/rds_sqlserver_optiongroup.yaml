AWSTemplateFormatVersion: 2010-09-09
Description: Following template creates a RDS SQL Server Express Edition Instance with 20GB Allocated Storage and Simple Option Group
Parameters:
  DBPassword:
    NoEcho: true
    Description: The database admin account password
    Type: String
    MinLength: 8
    MaxLength: 41
    AllowedPattern: ^[a-zA-Z0-9]*$
    ConstraintDescription: Must contain only alphanumeric characters and should be 8 to 41 characters long.
  DBUsername:
    Description: The database admin account name
    Type: String
    MinLength: 1
    MaxLength: 16
    AllowedPattern: ^[a-zA-Z][a-zA-Z0-9]*$
    ConstraintDescription: Must begin with a letter and contain only alphanumeric characters and should be 1 to 16 characters long.
Resources:
  RDSDB:
    Type: "AWS::RDS::DBInstance"
    DeletionPolicy: Snapshot
    Properties:
      AllocatedStorage: 20
      DBInstanceClass: db.t2.micro
      Engine: sqlserver-ex
      MasterUserPassword:
        Ref: DBPassword
      MasterUsername:
        Ref: DBUsername
      StorageType: gp2
      DBInstanceIdentifier: mysqlserverinstance
      OptionGroupName:
        Ref: MyOptionGroup
      Tags:
        - Key: Name
          Value: My SQL Database
  MyOptionGroup:
    Type: "AWS::RDS::OptionGroup"
    Properties:
      EngineName: sqlserver-ex
      MajorEngineVersion: "14.00" #Engine Version needs to be specified inside quotes, because passing 14.00 directly didn't worked
      OptionGroupDescription: Option Group created for mysqlserverinstance
      OptionConfigurations:
        - DBSecurityGroupMemberships:
            - default
          OptionName: SQLSERVER_AUDIT
          OptionSettings:
            - Name: IAM_ROLE_ARN
              Value:
                Ref: iamRole
            - Name: S3_BUCKET_ARN
              Value:
                Ref: s3Bucket
            - Name: ENABLE_COMPRESSION
              Value: true
            - Name: RETENTION_TIME
              Value: 0
      Tags:
        - Key: Name
          Value: My Option Group
  s3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicReadWrite
      BucketName: testbucketjustforoptiongroup
      # CorsConfiguration:
      # LifecycleConfiguration:
      # NotificationConfiguration:
      # VersioningConfiguration:
      # WebsiteConfiguration:
      Tags:
        - Key: Name
          Value: s3bucketforoptiongroup
  iamRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "s3:*"
                Resource: "*"
